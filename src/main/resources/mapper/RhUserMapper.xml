<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmxjy.system.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.xmmxjy.system.entity.UserEntity" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
    <result column="office_phone" property="officePhone" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="depart_id" property="departId" jdbcType="VARCHAR" />
    <result column="update_name" property="updateName" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select * from rh_user
    <where>
      <if test="username != null and username != ''">
        username like concat('%',concat(#{username}, '%'))
      </if>
    </where>

  </select>


<!--  <update id="updatePassword" parameterType="StudentEntity">
    UPDATE rh_user
    SET password = #{password},
    WHERE rh_user.id = #{id};
  </update>-->
  
  <select id="findPermissions" resultType="String">
    select permission from rh_function
where rh_function.id
in (select function_id from rh_role_function where role_id
in (select role_id from rh_user where id = #{id}))
  </select>
</mapper>